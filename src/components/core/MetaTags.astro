---
import { getImage } from 'astro:assets';
import { getRelativeUrlByFilePath } from '~/utils/directories';

import defaultImageSrc from '~/assets/images/default.png';

import { SITE } from '~/config.mjs';
import Fonts from '../atoms/Fonts.astro';
import ExtraMetaTags from '../atoms/ExtraMetaTags.astro';
import SplitbeeAnalytics from './SplitbeeAnalytics.astro';

const defaultImageResult = await getImage({
	src: defaultImageSrc,
	format: 'jpg',
	width: 1200,
	height: 628,
});
const defaultImage = defaultImageResult.src;

const {
	title = SITE.name,
	description = '',
	image: _image = defaultImage,

	canonical,
	noindex = false,
	nofollow = false,

	ogTitle = title,
	ogType = 'website',
} = Astro.props;

const image =
	typeof _image === 'string'
		? new URL(_image, Astro.site)
		: _image && typeof _image['src'] !== 'undefined'
		? new URL(getRelativeUrlByFilePath(_image.src), Astro.site)
		: null;
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

<title>{title}</title>
<meta name="description" content={description} />
{canonical && <link rel="canonical" href={canonical} />}
{noindex && <meta name="robots" content="noindex" />}
{nofollow && <meta name="robots" content="nofollow" />}

<!-- Open Graph -->
{canonical && <meta property="og:url" content={canonical} />}
<meta property="og:title" content={ogTitle} />
<meta property="og:description" content={description} />
<meta property="og:type" content={ogType} />
{image && <meta property="og:image" content={image.toString()} />}
{image && <meta property="og:image:alt" content={ogTitle} />}

<!-- Twitter Card -->
{image && <meta name="twitter:card" content="summary_large_image" />}
{image && <meta name="twitter:image" content={image.toString()} />}
<meta name="twitter:title" content={ogTitle} />
<meta name="twitter:description" content={description} />

<Fonts />

<!-- Google Site Verification -->
{SITE.googleSiteVerificationId && <meta name="google-site-verification" content={SITE.googleSiteVerificationId} />}

<!-- Google Analytics -->
{SITE.googleAnalyticsId && (
	<Fragment>
		<script async src={`https://www.googletagmanager.com/gtag/js?id=${SITE.googleAnalyticsId}`}></script>
		<script is:inline define:vars={{ analyticsId: SITE.googleAnalyticsId }}>
			window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());
			gtag('config', analyticsId);
		</script>
	</Fragment>
)}

{SITE.splitbeeAnalytics?.enabled && <SplitbeeAnalytics {...SITE.splitbeeAnalytics} />}

<ExtraMetaTags />
